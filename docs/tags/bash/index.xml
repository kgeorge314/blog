<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on Locke Data Blog</title>
    <link>http://lockedata.uk/itsalockeblog/tags/bash/</link>
    <description>Recent content in Bash on Locke Data Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img alt=&#34;Creative Commons License&#34; style=&#34;border-width:0&#34; src=&#34;https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;This work is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License&lt;/a&gt;.</copyright>
    <lastBuildDate>Mon, 24 Apr 2017 08:17:13 +0000</lastBuildDate>
    
	<atom:link href="http://lockedata.uk/itsalockeblog/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building an R training environment</title>
      <link>http://lockedata.uk/itsalockeblog/building-an-r-training-environment/</link>
      <pubDate>Mon, 24 Apr 2017 08:17:13 +0000</pubDate>
      
      <guid>http://lockedata.uk/itsalockeblog/building-an-r-training-environment/</guid>
      <description>I recently delivered a day of training at SQLBits and I really upped my game in terms of infrastructure for it. The resultant solution was super smooth and mitigated all the install issues and preparation for attendees. This meant we got to spend the whole day doing R, instead of troubleshooting.
I&amp;#8217;m so happy with the solution for an online R training environment that I want to share the solution, so you can take it and use it for when you need to do training.</description>
    </item>
    
    <item>
      <title>Quick tip: Passing values to a bash script</title>
      <link>http://lockedata.uk/itsalockeblog/quick-tip-passing-values-to-a-bash-script/</link>
      <pubDate>Sun, 30 Oct 2016 14:53:01 +0000</pubDate>
      
      <guid>http://lockedata.uk/itsalockeblog/quick-tip-passing-values-to-a-bash-script/</guid>
      <description>This is a very quick post on how you can make a bash script that allows you to provide it values via the command line. Passing values to a bash script uses a 1-based array convention inside the script, that are referenced by prefixing with $ inside the script.
This means that if I provide .\dummyscript.sh value1 value2, inside the dummyscript.sh I can retrieve these by referencing their positions:
echo $1 + $2  For improved clarity, you could assign them to new variables</description>
    </item>
    
  </channel>
</rss>