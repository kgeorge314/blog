<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Failures on Locke Data Blog</title>
    <link>http://lockedata.uk/itsalockeblog/tags/failures/</link>
    <description>Recent content in Failures on Locke Data Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <copyright>&lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;&lt;img alt=&#34;Creative Commons License&#34; style=&#34;border-width:0&#34; src=&#34;https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;This work is licensed under a &lt;a rel=&#34;license&#34; href=&#34;http://creativecommons.org/licenses/by-nc-sa/4.0/&#34;&gt;Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License&lt;/a&gt;.</copyright>
    <lastBuildDate>Mon, 11 Jul 2016 09:46:12 +0000</lastBuildDate>
    
	<atom:link href="http://lockedata.uk/itsalockeblog/tags/failures/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Stumbling into â€¦ Azure Automation</title>
      <link>http://lockedata.uk/itsalockeblog/2016-07-11-stumbling-into-azure-automation/</link>
      <pubDate>Mon, 11 Jul 2016 09:46:12 +0000</pubDate>
      
      <guid>http://lockedata.uk/itsalockeblog/2016-07-11-stumbling-into-azure-automation/</guid>
      <description>&lt;p&gt;I&amp;#8217;ve recently been trying to solve the challenge of working extracting files from AWS and getting them into Azure in my desired format. I wanted a solution that kept everything on the cloud and completely avoid local tin. I wanted it to have built-in auditing and error handling. I wanted something whizzy and new, to be honest! One way in which I attempted to tackle the task was with &lt;a href=&#34;https://azure.microsoft.com/en-gb/services/automation/&#34;&gt;Azure Automation&lt;/a&gt;. In this post, I&amp;#8217;ll overview Automation and explore how it stacked up for what I was attempting to use it for.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Overall Task: Get compressed (.tar.gz) files from AWS S3 to Azure, decompress the files, concatenate the contents and put in a different container for analytics magic&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Like with most things I dropped myself into the deep-end on it so had fairly minimal knowledge of PowerShell and the Azure modules, therefore I fully expect more knowledgeable folks to wince at my stuff. General advice, &amp;#8220;you should do it like this, then this&amp;#8230;&amp;#8221;&amp;#8216;s, and resource recommendations are all very welcome &amp;#8211; leave a comment with them in!&lt;/p&gt;

&lt;h2 id=&#34;azure-automation&#34;&gt;Azure Automation&lt;/h2&gt;

&lt;p&gt;Azure Automation is essentially a hosted PowerShell script execution service. It seems to be aimed primarily at managing Azure resources, particularly via &lt;a href=&#34;https://www.simple-talk.com/sysadmin/powershell/powershell-desired-state-configuration-the-basics/&#34;&gt;Desired State Configurations&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is, however, a general PowerShell powerhouse, with scheduling capabilities and a bunch of useful features for the safe storage of credentials etc. This makes it an excellent tool if you&amp;#8217;re looking to do something with PowerShell on a regular basis and need to interact with Azure.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>